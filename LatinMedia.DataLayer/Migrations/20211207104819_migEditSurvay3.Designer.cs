// <auto-generated />
using System;
using LatinMedia.DataLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LatinMedia.DataLayer.Migrations
{
    [DbContext(typeof(LatinMediaContext))]
    [Migration("20211207104819_migEditSurvay3")]
    partial class migEditSurvay3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Company.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyImageName")
                        .HasMaxLength(100);

                    b.Property<string>("CompanyTitle")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<bool>("IsDelete");

                    b.HasKey("CompanyId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Course.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AcademyId");

                    b.Property<int?>("BBBServersId");

                    b.Property<int>("CompanyId");

                    b.Property<int>("CountFiles");

                    b.Property<string>("CourseDescription");

                    b.Property<string>("CourseFaTitle")
                        .HasMaxLength(400);

                    b.Property<string>("CourseFileName")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("CourseImageName")
                        .HasMaxLength(100);

                    b.Property<string>("CourseLatinTitle")
                        .HasMaxLength(400);

                    b.Property<int>("CoursePrice");

                    b.Property<int>("CourseTime");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("DemoFileName")
                        .HasMaxLength(500);

                    b.Property<DateTime>("EndDate");

                    b.Property<int>("GroupId");

                    b.Property<bool>("IsDelete");

                    b.Property<bool>("IsSubTitle");

                    b.Property<string>("Language")
                        .HasMaxLength(200);

                    b.Property<int>("MaxUsers");

                    b.Property<int?>("SecondSubGroupId");

                    b.Property<int>("ServerId");

                    b.Property<int?>("SubGroupId");

                    b.Property<int>("TeacherId");

                    b.Property<int>("VTA_Id");

                    b.Property<int>("Volume");

                    b.HasKey("CourseId");

                    b.HasIndex("AcademyId");

                    b.HasIndex("BBBServersId");

                    b.HasIndex("GroupId");

                    b.HasIndex("SecondSubGroupId");

                    b.HasIndex("SubGroupId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Course.CourseComment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<int>("CourseId");

                    b.Property<DateTime>("CreateDate");

                    b.Property<bool>("IsDelete");

                    b.Property<bool>("IsReadAdmin");

                    b.Property<int>("UserId");

                    b.HasKey("CommentId");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId");

                    b.ToTable("CourseComments");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Course.CourseGroup", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<string>("GroupImageName")
                        .HasMaxLength(100);

                    b.Property<string>("GroupTitle")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<bool>("IsDelete");

                    b.Property<int?>("ParentId");

                    b.HasKey("GroupId");

                    b.HasIndex("ParentId");

                    b.ToTable("CourseGroups");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Course.CourseLevel", b =>
                {
                    b.Property<int>("LevelId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LevelTitle")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("LevelId");

                    b.ToTable("CourseLevels");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Course.CourseType", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeTitle")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("TypeId");

                    b.ToTable("CourseTypes");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Course.UserCourse", b =>
                {
                    b.Property<int>("UC_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId");

                    b.Property<int>("UserId");

                    b.HasKey("UC_Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCourse");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Order.Discount", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DiscountCode")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<int>("DiscountPercent");

                    b.Property<DateTime?>("EndDate");

                    b.Property<DateTime?>("StartDate");

                    b.Property<int?>("UsableCount");

                    b.HasKey("DiscountId");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Order.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsFinaly");

                    b.Property<DateTime>("OrderDate");

                    b.Property<int>("OrderSum");

                    b.Property<int>("UserId");

                    b.HasKey("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Order.OrderDetail", b =>
                {
                    b.Property<int>("DetailId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId");

                    b.Property<int>("CoursePrice");

                    b.Property<int>("OrderCount");

                    b.Property<int>("OrderId");

                    b.HasKey("DetailId");

                    b.HasIndex("CourseId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Permissions.Permission", b =>
                {
                    b.Property<int>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ParentId");

                    b.Property<string>("PermissionTitle")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("PermissionId");

                    b.HasIndex("ParentId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Permissions.RolePermission", b =>
                {
                    b.Property<int>("RP_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PermissionId");

                    b.Property<int>("RoleId");

                    b.HasKey("RP_Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Survay.Education", b =>
                {
                    b.Property<int>("EduId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EduName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("EduId");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Survay.Employment", b =>
                {
                    b.Property<int>("EmpId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmpName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("EmpId");

                    b.ToTable("Employments");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Survay.FourItems", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("ItemId");

                    b.ToTable("FourItems");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Survay.Survay", b =>
                {
                    b.Property<int>("SurvayId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Age");

                    b.Property<string>("Comment");

                    b.Property<int>("EduId");

                    b.Property<int>("EmpId");

                    b.Property<string>("FirstName");

                    b.Property<int>("GenderId");

                    b.Property<string>("LastName");

                    b.Property<string>("Mobile");

                    b.Property<int>("Poll1");

                    b.Property<int>("Poll2");

                    b.Property<int>("Poll3");

                    b.Property<int>("Poll4");

                    b.Property<int>("Poll5");

                    b.Property<DateTime>("SurvayDate");

                    b.Property<int>("UserId");

                    b.HasKey("SurvayId");

                    b.HasIndex("EduId");

                    b.HasIndex("EmpId");

                    b.ToTable("Survays");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Survay.SurvayDetail", b =>
                {
                    b.Property<int>("SurvayId");

                    b.Property<int>("TeacherId");

                    b.Property<string>("Comment");

                    b.Property<int>("Poll1");

                    b.Property<int>("Poll2");

                    b.Property<int>("Poll3");

                    b.Property<int>("Poll4");

                    b.Property<int>("Poll5");

                    b.Property<int>("Poll6");

                    b.Property<DateTime>("SurvayDate");

                    b.HasKey("SurvayId", "TeacherId");

                    b.ToTable("SurvayDetails");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Survay.TwoItems", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("ItemId");

                    b.ToTable("TwoItems");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Teacher.NewTeacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActiveCode")
                        .HasMaxLength(4);

                    b.Property<int>("CityCode");

                    b.Property<int?>("CityId");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("GenderId")
                        .HasMaxLength(100);

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDelete");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("UserAvatar")
                        .HasMaxLength(50);

                    b.HasKey("TeacherId");

                    b.HasIndex("CityId");

                    b.HasIndex("GenderId");

                    b.ToTable("NewTeachers");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Teacher.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<bool>("IsDelete");

                    b.Property<string>("TeacherImageName")
                        .HasMaxLength(200);

                    b.Property<string>("TeacherNameEN")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("TeacherNameFa")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("TeacherId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Teacher.TeacherAcademy", b =>
                {
                    b.Property<int>("TA_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AcademyId");

                    b.Property<int>("TeacherId");

                    b.HasKey("TA_Id");

                    b.HasIndex("AcademyId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherAcademies");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Teacher.TeacherGroup", b =>
                {
                    b.Property<int>("TG_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GroupId");

                    b.Property<int>("TeacherId");

                    b.HasKey("TG_Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherGroups");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.User.Academy", b =>
                {
                    b.Property<int>("AcademyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AcademyAddress")
                        .HasMaxLength(200);

                    b.Property<string>("AcademyFullName")
                        .HasMaxLength(200);

                    b.Property<string>("AcademyName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("AcademyTell")
                        .HasMaxLength(20);

                    b.Property<int>("BBBServersId");

                    b.Property<int>("CityId");

                    b.Property<DateTime>("CreateDate");

                    b.Property<bool>("IsDelete");

                    b.Property<string>("ManagerId")
                        .HasMaxLength(200);

                    b.Property<string>("ManagerName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("ManagerTell")
                        .HasMaxLength(200);

                    b.Property<string>("OwnerId")
                        .HasMaxLength(100);

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("OwnerTell")
                        .HasMaxLength(200);

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20);

                    b.HasKey("AcademyId");

                    b.HasIndex("BBBServersId");

                    b.HasIndex("CityId");

                    b.ToTable("Academies");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.User.AcademyType", b =>
                {
                    b.Property<int>("AcademyTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AcademyTypeName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("AcademyTypeTitle")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<bool>("IsDelete");

                    b.HasKey("AcademyTypeId");

                    b.ToTable("AcademyTypes");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.User.AcademyTypeList", b =>
                {
                    b.Property<int>("AT_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AcademyId");

                    b.Property<int>("AcademyTypeId");

                    b.Property<int?>("CourseId");

                    b.HasKey("AT_Id");

                    b.HasIndex("AcademyId");

                    b.HasIndex("AcademyTypeId");

                    b.HasIndex("CourseId");

                    b.ToTable("AcademyTypeLists");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.User.BBBServers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive");

                    b.Property<string>("ServerName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("ServerSharesSecret")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("ServerUrl")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("BBBServers");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.User.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("MaxUsers");

                    b.Property<int>("StateId")
                        .HasMaxLength(100);

                    b.HasKey("CityId");

                    b.HasIndex("StateId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.User.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassId");

                    b.Property<int>("CourseId");

                    b.Property<DateTime>("CreateDate");

                    b.Property<int>("EventId");

                    b.Property<string>("Extra");

                    b.Property<int>("ServerId");

                    b.Property<string>("TeacherIP");

                    b.Property<int>("TeacherId");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("EventId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.User.EventType", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EventName");

                    b.HasKey("EventId");

                    b.ToTable("EventTypes");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.User.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("GenderId");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.User.GeneralEvents", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate");

                    b.Property<int>("EventId");

                    b.Property<string>("Extra");

                    b.Property<string>("UserIP");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("UserId");

                    b.ToTable("GeneralEvents");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.User.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDelete");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("RoleTitle")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.User.State", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("StateId");

                    b.ToTable("States");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.User.SupportTell", b =>
                {
                    b.Property<int>("TellId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("StateId");

                    b.Property<string>("Tell");

                    b.HasKey("TellId");

                    b.HasIndex("StateId");

                    b.ToTable("SupportTells");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.User.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AcademyId")
                        .HasMaxLength(100);

                    b.Property<string>("ActiveCode")
                        .HasMaxLength(4);

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("GenderId")
                        .HasMaxLength(100);

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDelete");

                    b.Property<bool>("IsPolled");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("UserAvatar")
                        .HasMaxLength(50);

                    b.Property<int>("UserType");

                    b.HasKey("UserId");

                    b.HasIndex("AcademyId");

                    b.HasIndex("GenderId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.User.UserDiscountCode", b =>
                {
                    b.Property<int>("UD_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DiscountId");

                    b.Property<int>("UserId");

                    b.HasKey("UD_Id");

                    b.HasIndex("DiscountId");

                    b.HasIndex("UserId");

                    b.ToTable("userDiscountCodes");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.User.UserEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId");

                    b.Property<DateTime>("CreateDate");

                    b.Property<int>("EventId");

                    b.Property<string>("Extra");

                    b.Property<string>("UserIP");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("EventId");

                    b.HasIndex("UserId");

                    b.ToTable("UserEvents");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.User.UserRole", b =>
                {
                    b.Property<int>("UR_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RoleId");

                    b.Property<int>("UserId");

                    b.HasKey("UR_Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.User.ValidTimesAcademyList", b =>
                {
                    b.Property<int>("VTA_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AcademyId");

                    b.Property<int>("ValidTimesCourseId");

                    b.HasKey("VTA_Id");

                    b.HasIndex("AcademyId");

                    b.HasIndex("ValidTimesCourseId");

                    b.ToTable("ValidTimesAcademyLists");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.User.ValidTimesCourse", b =>
                {
                    b.Property<int>("ValidTimesCourseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EndTime");

                    b.Property<bool>("EvenOdd");

                    b.Property<string>("StartTime");

                    b.Property<string>("ValidTimesCourseName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("ValidTimesCourseId");

                    b.ToTable("ValidTimesCourses");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Wallet.Wallet", b =>
                {
                    b.Property<int>("WalletId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<bool>("IsPay");

                    b.Property<int>("TypeId");

                    b.Property<int>("UserId");

                    b.HasKey("WalletId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Wallets");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Wallet.WalletType", b =>
                {
                    b.Property<int>("TypeId");

                    b.Property<string>("TypeTitle")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("TypeId");

                    b.ToTable("WalletTypes");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Course.Course", b =>
                {
                    b.HasOne("LatinMedia.DataLayer.Entities.User.Academy", "Academy")
                        .WithMany()
                        .HasForeignKey("AcademyId");

                    b.HasOne("LatinMedia.DataLayer.Entities.User.BBBServers", "BBBServers")
                        .WithMany("Courses")
                        .HasForeignKey("BBBServersId");

                    b.HasOne("LatinMedia.DataLayer.Entities.Course.CourseGroup", "CourseGroup")
                        .WithMany("Courses")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LatinMedia.DataLayer.Entities.Course.CourseGroup", "SecondSubGroup")
                        .WithMany("SecondSubGroupCourses")
                        .HasForeignKey("SecondSubGroupId");

                    b.HasOne("LatinMedia.DataLayer.Entities.Course.CourseGroup", "SubGroup")
                        .WithMany("SubGroupCourses")
                        .HasForeignKey("SubGroupId");

                    b.HasOne("LatinMedia.DataLayer.Entities.Teacher.Teacher", "Teacher")
                        .WithMany("Courses")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Course.CourseComment", b =>
                {
                    b.HasOne("LatinMedia.DataLayer.Entities.Course.Course", "Course")
                        .WithMany("courseComments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LatinMedia.DataLayer.Entities.User.User", "User")
                        .WithMany("courseComments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Course.CourseGroup", b =>
                {
                    b.HasOne("LatinMedia.DataLayer.Entities.Course.CourseGroup")
                        .WithMany("CourseGroups")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Course.UserCourse", b =>
                {
                    b.HasOne("LatinMedia.DataLayer.Entities.Course.Course", "Course")
                        .WithMany("UserCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LatinMedia.DataLayer.Entities.User.User", "User")
                        .WithMany("UserCourses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Order.Order", b =>
                {
                    b.HasOne("LatinMedia.DataLayer.Entities.User.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Order.OrderDetail", b =>
                {
                    b.HasOne("LatinMedia.DataLayer.Entities.Course.Course", "Course")
                        .WithMany("OrderDetails")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LatinMedia.DataLayer.Entities.Order.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Permissions.Permission", b =>
                {
                    b.HasOne("LatinMedia.DataLayer.Entities.Permissions.Permission")
                        .WithMany("Permissions")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Permissions.RolePermission", b =>
                {
                    b.HasOne("LatinMedia.DataLayer.Entities.Permissions.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LatinMedia.DataLayer.Entities.User.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Survay.Survay", b =>
                {
                    b.HasOne("LatinMedia.DataLayer.Entities.Survay.Education", "Education")
                        .WithMany("Survays")
                        .HasForeignKey("EduId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LatinMedia.DataLayer.Entities.Survay.Employment", "Employment")
                        .WithMany("Survays")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Survay.SurvayDetail", b =>
                {
                    b.HasOne("LatinMedia.DataLayer.Entities.Survay.Survay", "Survay")
                        .WithMany()
                        .HasForeignKey("SurvayId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Teacher.NewTeacher", b =>
                {
                    b.HasOne("LatinMedia.DataLayer.Entities.User.City", "City")
                        .WithMany("NewTeachers")
                        .HasForeignKey("CityId");

                    b.HasOne("LatinMedia.DataLayer.Entities.User.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Teacher.TeacherAcademy", b =>
                {
                    b.HasOne("LatinMedia.DataLayer.Entities.User.Academy", "Academy")
                        .WithMany("TeacherAcademies")
                        .HasForeignKey("AcademyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LatinMedia.DataLayer.Entities.Teacher.NewTeacher", "NewTeacher")
                        .WithMany("TeacherAcademies")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Teacher.TeacherGroup", b =>
                {
                    b.HasOne("LatinMedia.DataLayer.Entities.Course.CourseGroup", "CourseGroup")
                        .WithMany("TeacherGroup")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LatinMedia.DataLayer.Entities.Teacher.NewTeacher", "NewTeacher")
                        .WithMany("TeacherGroup")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.User.Academy", b =>
                {
                    b.HasOne("LatinMedia.DataLayer.Entities.User.BBBServers", "BBBServers")
                        .WithMany("Academies")
                        .HasForeignKey("BBBServersId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LatinMedia.DataLayer.Entities.User.City", "City")
                        .WithMany("Academies")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.User.AcademyTypeList", b =>
                {
                    b.HasOne("LatinMedia.DataLayer.Entities.User.Academy", "Academy")
                        .WithMany("AcademyTypeLists")
                        .HasForeignKey("AcademyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LatinMedia.DataLayer.Entities.User.AcademyType", "AcademyType")
                        .WithMany("AcademyTypeLists")
                        .HasForeignKey("AcademyTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LatinMedia.DataLayer.Entities.Course.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId");
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.User.City", b =>
                {
                    b.HasOne("LatinMedia.DataLayer.Entities.User.State", "State")
                        .WithMany("Cities")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.User.Event", b =>
                {
                    b.HasOne("LatinMedia.DataLayer.Entities.Course.Course", "Course")
                        .WithMany("Events")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LatinMedia.DataLayer.Entities.User.EventType", "EventType")
                        .WithMany("Events")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LatinMedia.DataLayer.Entities.Teacher.NewTeacher", "NewTeacher")
                        .WithMany("Events")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.User.GeneralEvents", b =>
                {
                    b.HasOne("LatinMedia.DataLayer.Entities.User.EventType", "EventType")
                        .WithMany("GeneralEvents")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LatinMedia.DataLayer.Entities.User.User", "User")
                        .WithMany("GeneralEvents")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.User.SupportTell", b =>
                {
                    b.HasOne("LatinMedia.DataLayer.Entities.User.State", "State")
                        .WithMany("SupportTells")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.User.User", b =>
                {
                    b.HasOne("LatinMedia.DataLayer.Entities.User.Academy", "Academy")
                        .WithMany()
                        .HasForeignKey("AcademyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LatinMedia.DataLayer.Entities.User.Gender", "Gender")
                        .WithMany("Users")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.User.UserDiscountCode", b =>
                {
                    b.HasOne("LatinMedia.DataLayer.Entities.Order.Discount", "Discount")
                        .WithMany("UserDiscountCodes")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LatinMedia.DataLayer.Entities.User.User", "User")
                        .WithMany("UserDiscountCodes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.User.UserEvent", b =>
                {
                    b.HasOne("LatinMedia.DataLayer.Entities.Course.Course", "Course")
                        .WithMany("UserEvents")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LatinMedia.DataLayer.Entities.User.EventType", "EventType")
                        .WithMany("UserEvents")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LatinMedia.DataLayer.Entities.User.User", "User")
                        .WithMany("UserEvents")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.User.UserRole", b =>
                {
                    b.HasOne("LatinMedia.DataLayer.Entities.User.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LatinMedia.DataLayer.Entities.User.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.User.ValidTimesAcademyList", b =>
                {
                    b.HasOne("LatinMedia.DataLayer.Entities.User.Academy", "Academy")
                        .WithMany("ValidTimesAcademyLists")
                        .HasForeignKey("AcademyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LatinMedia.DataLayer.Entities.User.ValidTimesCourse", "ValidTimesCourse")
                        .WithMany("ValidTimesAcademyLists")
                        .HasForeignKey("ValidTimesCourseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LatinMedia.DataLayer.Entities.Wallet.Wallet", b =>
                {
                    b.HasOne("LatinMedia.DataLayer.Entities.Wallet.WalletType", "WalletType")
                        .WithMany("Wallets")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LatinMedia.DataLayer.Entities.User.User", "User")
                        .WithMany("Wallets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
